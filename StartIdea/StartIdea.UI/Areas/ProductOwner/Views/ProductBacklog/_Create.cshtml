@model StartIdea.UI.Areas.ProductOwner.ViewModels.ProductBacklogVM

<div class="modal fade" tabindex="-1" role="dialog" id="popup-create">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("Create", "ProductBacklog"))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.FiltroUserStory)
                @Html.HiddenFor(model => model.FiltroDataInicial)
                @Html.HiddenFor(model => model.FiltroDataFinal)
                @Html.HiddenFor(model => model.PaginaGrid)
                @Html.HiddenFor(model => model.DisplayCreate)

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="gridSystemModalLabel">Novo Backlog do Produto</h4>
                </div>

                <div class="modal-body">
                    <div class="container-fluid">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">
                            <div class="col-xs-12 form-group">
                                @Html.LabelFor(model => model.UserStory)
                                @Html.EditorFor(model => model.UserStory, new { htmlAttributes = new { @class = "form-control", @placeholder = "Exemplo: Como vendedor eu gostaria de verificar se um livro está disponível no estoque para venda." } })
                                @Html.ValidationMessageFor(model => model.UserStory, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 form-group">
                                @Html.LabelFor(model => model.Prioridade)
                                @Html.EditorFor(model => model.Prioridade, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Prioridade, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="reset" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Criar</button>
                </div>
            }
        </div>
    </div>
</div>